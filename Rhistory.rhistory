install.packages(c("tidyverse", "rnoaa"))
setwd()
getwd
getwd()
library(tidyverse)
library(rnoaa)
library(lubridate)
# station_data = ghcnd_stations()
# write.csv(station_data, "station_data.csv")# данные скачаны и сохранены в файл формата csv
install.packages("lubridate")
library(tidyverse)
library(rnoaa)
library(lubridate)
# station_data = ghcnd_stations()
# write.csv(station_data, "station_data.csv")# данные скачаны и сохранены в файл формата csv
station_data = read.csv("station_data.csv") # загрузка данных из сохраненного файла с данным метеостанций
# station_data = ghcnd_stations()
station_data = read.csv("station_data.csv")
library(lubridate)
# station_data = ghcnd_stations()
# write.csv(station_data, "station_data.csv")# данные скачаны и сохранены в файл формата csv
#
#
# station_data = ghcnd_stations(57)
# write.csv(station_data, "station_data.csv")# данные скачаны и сохранены в файл формата csv
#После получения всписка всех станций, получите список станций ближайших к столице вашего региона,
#создав таблицу с именем региона и координатами его столицы (Брянская область - г. Брянск, координаты: n 53.242281, e 34.359741)
station_data = ghcnd_stations(57)
write.csv(station_data, "station_data.csv")# данные скачаны и сохранены в файл формата csv
station_data = ghcnd_stations(57)
station_data = ghcnd_stations()
library(tidyverse)
library(rnoaa)
library(lubridate)
station_data = ghcnd_stations()
View(station_data)
View(station_data)
View(station_data)
View(station_data)
View(station_data)
write.csv(station_data, "station_data.csv")
write.csv(station_data, "station_data.csv")
station_data = read.csv("station_data.csv")
write.csv(station_data, "station_data.csv")
station_data = read.csv("station_data.csv")#
station_data = read.csv("station_data.csv")#
getwd()
station_data = read.csv("station_data.csv") # Сохраним данные в вектор
oryol= data.frame(id = "ORYOL", latitude = 52.9668 ,  longitude = 36.0625 ) # Делаем поиск метеостанций в радиусе не более 90 км
oryol_around = meteo_nearby_stations(lat_lon_df = oryol, station_data = station_data,
radius = 90, var = c("PRCP", "TAVG"),
year_min = 1995, year_max = 2004)
View(oryol_around)
View(station_data)
View(station_data)
View(oryol_around)
View(oryol_around)
View(oryol)
View(oryol)
oryol= data.frame # Делаем поиск метеостанций в радиусе не более 90 км:
oryol = data.frame(id = "ORYOL", latitude = 52.96508,  longitude = 36.0785)
oryol_around = meteo_nearby_stations(lat_lon_df = oryol, station_data = station_data,
radius = 90, var = c("PRCP", "TAVG"),
year_min = 1995, year_max = 2004)
View(oryol_around)
View(oryol_around)
View(station_data)
View(station_data)
View(station_data)
View(oryol)
View(oryol)
oryol= data.frame # Делаем поиск метеостанций в радиусе не более 90 км:
oryol = data.frame(id = "ORYOL", latitude = 52.967187,  longitude = 36.069613)
oryol_around = meteo_nearby_stations(lat_lon_df = oryol, station_data = station_data,
radius = 90, var = c("PRCP", "TAVG"),
year_min = 1995, year_max = 2004)
View(oryol_around)
View(oryol_around)
View(oryol)
View(oryol)
View(oryol_around)
View(oryol_around)
View(oryol_around)
View(oryol)
View(oryol)
View(oryol_around)
View(oryol_around)
View(oryol)
View(oryol)
View(oryol)
View(oryol_around)
View(oryol_around)
oryol_around
all_data=tibble()
for (i in 1:3)
{
# Определем станцию из 3 находящихся в радиусе 90 км
oryol_id=  oryol_around[["ORYOL"]][["id"]][i]
#Загружаем данные для станции
data=meteo_tidy_ghcnd(stationid = oryol_id,
var="TAVG",
date_min="1995-01-01",
date_max="2004-12-31")
# После заносим эти данные в таблицу и объединяем их:
all_data = bind_rows(all_data, data)
}
View(all_data)
View(all_data)
View(all_data)
View(all_data)
View(all_data)
View(all_data)
all_data
View(all_data)
View(all_data)
View(all_data)
Oryol_data = all_data %>%
Oryol_data = tibble()
OryoL_data = all_data %>%
OryoL_data = tibble()
mutate(month=month(date)) %>%
group_by(month, id) %>%
# Найдем месячный d и cумму активных тмператур для каждой станции:
mutate(d = length(tavg[tavg>70])/length(tavg)) %>%
summarise(tavg = sum(tavg[tavg>50])/10, d = mean(d)) %>%
# Сгруппировав данные по месяцам,
group_by(month) %>%
# найдем средние активные температуры и d для каждого месяца:
summarise(s = mean(tavg, na.rm = TRUE), d = mean(d)) %>%
# Добавим колонки для расчета:
mutate (a = af, b = bf) %>%
# Рассчитаем урожайность для каждого месяца:
mutate (fert = ((a + b * 1.0 * s) * d * Kf) / (Qj * Lj * (100-Ej)) )
Yield = sum(clean_data$fert);
cat("Согласно расчету, урожайность пшеницы в Белгородской области в 2006 году составила:", Yield, "ц/га")
af = c(0.00,0.00,0.00,32.11, 26.31,25.64,23.20,18.73,16.30,13.83,0.00,0.00)
bf = c(0.00, 0.00, 0.00, 11.30, 9.26, 9.03,8.16, 6.59, 5.73, 4.87, 0.00, 0.00)
Kf = 300 #  Коэффициент использования ФАР
Qj = 1600 # калорийность урожая культуры
Lj = 2.2 #  сумма частей основной и побочной продукции
Ej = 25 #   стандартная влажность культуры
OryoL_data = all_data %>%
OryoL_data = tibble()
mutate(month=month(date)) %>%
group_by(month, id) %>%
# Найдем месячный d и cумму активных тмператур для каждой станции:
mutate(d = length(tavg[tavg>70])/length(tavg)) %>%
summarise(tavg = sum(tavg[tavg>50])/10, d = mean(d)) %>%
# Сгруппировав данные по месяцам,
group_by(month) %>%
# найдем средние активные температуры и d для каждого месяца:
summarise(s = mean(tavg, na.rm = TRUE), d = mean(d)) %>%
# Добавим колонки для расчета:
mutate (a = af, b = bf) %>%
# Рассчитаем урожайность для каждого месяца:
mutate (fert = ((a + b * 1.0 * s) * d * Kf) / (Qj * Lj * (100-Ej)) )
Yield = sum(clean_data$fert);
af = c(0.00,0.00,0.00,32.11, 26.31,25.64,23.20,18.73,16.30,13.83,0.00,0.00)
bf = c(0.00, 0.00, 0.00, 11.30, 9.26, 9.03,8.16, 6.59, 5.73, 4.87, 0.00, 0.00)
Kf = 300 #  Коэффициент использования ФАР
Qj = 1600 # калорийность урожая культуры
Lj = 2.2 #  сумма частей основной и побочной продукции
Ej = 25 #   стандартная влажность культуры
OryoL_data = tibble()
OryoL_data = all_data %>%
# Добавляем колонку month для группировки данных:
mutate(month=month(date)) %>%
group_by(month, id) %>%
# Найдем месячный d и cумму активных тмператур для каждой станции:
mutate(d = length(tavg[tavg>70])/length(tavg)) %>%
summarise(tavg = sum(tavg[tavg>50])/10, d = mean(d)) %>%
# Сгруппировав данные по месяцам,
group_by(month) %>%
# найдем средние активные температуры и d для каждого месяца:
summarise(s = mean(tavg, na.rm = TRUE), d = mean(d)) %>%
# Добавим колонки для расчета:
mutate (a = af, b = bf) %>%
af = c(0.00,0.00,0.00,32.11, 26.31,25.64,23.20,18.73,16.30,13.83,0.00,0.00)
bf = c(0.00, 0.00, 0.00, 11.30, 9.26, 9.03,8.16, 6.59, 5.73, 4.87, 0.00, 0.00)
df = c(0.00,0.00, 0.00, 0.33, 1.00, 1.00, 1.00, 0.32, 0.00, 0.00, 0.00, 0.00)
Kf = 300 #  Коэффициент использования ФАР
Qj = 1600 # калорийность урожая культуры
Lj = 2.2 #  сумма частей основной и побочной продукции
Ej = 25 #   стандартная влажность культуры
OryoL_data = tibble()
OryoL_data = all_data %>%
# Добавляем колонку month для группировки данных:
mutate(month=month(date)) %>%
group_by(month, id) %>%
# Найдем месячный d и cумму активных тмператур для каждой станции:
mutate(d = length(tavg[tavg>70])/length(tavg)) %>%
summarise(tavg = sum(tavg[tavg>50])/10, d = mean(d)) %>%
# Сгруппировав данные по месяцам,
group_by(month) %>%
# найдем средние активные температуры и d для каждого месяца:
summarise(s = mean(tavg, na.rm = TRUE), d = mean(d)) %>%
# Добавим колонки для расчета:
mutate (a = af, b = bf) %>%
OryoL_data = all_data %>%
# Добавляем колонку month для группировки данных:
mutate(month=month(date)) %>%
group_by(month, id) %>%
# Найдем месячный d и cумму активных тмператур для каждой станции:
mutate(d = length(tavg[tavg>70])/length(tavg)) %>%
summarise(tavg = sum(tavg[tavg>50])/10, d = mean(d)) %>%
# Сгруппировав данные по месяцам,
group_by(month) %>%
# найдем средние активные температуры и d для каждого месяца:
summarise(s = mean(tavg, na.rm = TRUE), d = mean(d)) %>%
# Добавим колонки для расчета:
mutate (a = af, b = bf) %>%
# Рассчитаем урожайность для каждого месяца:
mutate (fert = ((a + b * 1.0 * s) * d * Kf) / (Qj * Lj * (100-Ej)) )
#задание 1
# Даниленко А.А 121 группа – для региона 57 рассчитайте урожайность пшеницы в 2005 году, взяв для рассчета средние суммы активных температур за предыдущие 10 лет, с метеостанций в радиусе не более 90 км
# 57 регион - это Орловская область
setwd() "C:/Users/any11/Documents"
library(tidyverse)# загружаем пакеты
library(rnoaa)#загружаем пакеты
library(lubridate)#загружаем пакеты
station_data = ghcnd_stations() #Загружаем данные о метеостанциях
#задание 1
# Даниленко А.А 121 группа – для региона 57 рассчитайте урожайность пшеницы в 2005 году, взяв для рассчета средние суммы активных температур за предыдущие 10 лет, с метеостанций в радиусе не более 90 км
# 57 регион - это Орловская область
setwd() "C:/Users/any11/Documents"
library(tidyverse)# загружаем пакеты
library(rnoaa)#загружаем пакеты
library(lubridate)#загружаем пакеты
station_data = ghcnd_stations() #Загружаем данные о метеостанциях
write.csv(station_data, "station_data.csv") # Сохраним в файл
station_data = read.csv("station_data.csv") # Сохраним данные в вектор
#Задаем название и координаты столицы региона 57:
oryol= data.frame # Делаем поиск метеостанций в радиусе не более 90 км:
oryol = data.frame(id = "ORYOL", latitude = 52.967187,  longitude = 36.069613)
oryol_around = meteo_nearby_stations(lat_lon_df = oryol, station_data = station_data,
radius = 90, var = c("PRCP", "TAVG"),
year_min = 1995, year_max = 2004)
#Создаем таблицу, в которой будем сохранять данные со всех станций в радиусе 90 км:
all_data = tibble()
OryoL_data = tibble()
#запишем в таблицу данные
for (i in 1:3)
{
# Определим станцию:
oryol_id = oryol_around[["ORYOL"]][["id"]][i]
# Загрузим данные для станции:
data = meteo_tidy_ghcnd(stationid = oryol_id,
var="TAVG",
date_min="1995-01-01",
date_max="2004-12-31")
#объединим данные в таблице
all_data = bind_rows(all_data, data %>%
#добавим колонки для группировки по году и месяцу
mutate(year = year(date), month = month(date)) %>%
group_by(month, year) %>%
#найдем суммарную среднюю активную температуру по месяцу за каждый год для станции
summarise (tavg = sum(tavg[tavg>50])/10 )
)
}
#Создадим векторы с данными для расчета:
af = c(0.00,0.00,0.00,32.11, 26.31,25.64,23.20,18.73,16.30,13.83,0.00,0.00)
bf = c(0.00, 0.00, 0.00, 11.30, 9.26, 9.03,8.16, 6.59, 5.73, 4.87, 0.00, 0.00)
df = c(0.00,0.00, 0.00, 0.33, 1.00, 1.00, 1.00, 0.32, 0.00, 0.00, 0.00, 0.00)
Kf = 300 # Коэффициент использования ФАР
Qj = 1600 # калорийность урожая культуры
Lj = 2.2 # сумма частей основной и побочной продукции
Ej = 25 # стандартная влажность культуры
# Изменения в таблице сохранятся в векторе OryoL_data.
OryoL_data = all_data %>%
# Добавим колонку month для группировки данных:
group_by(month) %>%
# Найдем месячный d и cумму активных тмператур для каждой станции:
summarise(s = mean(tavg, na.rm = TRUE)) %>%
#добавим данные из таблицы с показателем d
# Добавим колонки для расчета:
mutate (a = af, b = bf, d = df) %>%
# Рассчитаем урожайность для каждого месяца:
mutate (fert = ((a + b * 1.0 * s) * d * Kf) / (Qj * Lj * (100-Ej)) )
#Согласно расчету, урожайность пшеницы в —----------— составила (ц/га):
Yield = sum(clean_data$fert); Yield
Yield = sum(OryoL_data$fert); Yield
